### YamlMime:UniversalReference
items:
- uid: az_sf_application
  name: az sf application
  summary: Manage the applications running on a Service Fabric cluster.
  langs:
  - azurecli
  children:
  - az_sf_application_create
  - az_sf_application_delete
  - az_sf_application_health
  - az_sf_application_list
  - az_sf_application_manifest
  - az_sf_application_package_delete
  - az_sf_application_provision
  - az_sf_application_report_health
  - az_sf_application_type
  - az_sf_application_unprovision
  - az_sf_application_upgrade
  - az_sf_application_upload
- uid: az_sf_application_create
  name: az sf application create
  summary: Creates a Service Fabric application using the specified description.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --app-name
    summary: The name of the application, including the 'fabric:' URI scheme.
  - isRequired: true
    name: --app-type
    summary: The application type name found in the application manifest.
  - isRequired: true
    name: --app-version
    summary: The version of the application type as defined in the application manifest.
  - name: --max-node-count
    summary: The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes.
  - name: --metrics
    summary: A JSON encoded list of application capacity metric descriptions. A metric is defined as a name, associated with a set of capacities for each node that the application exists on.
  - name: --min-node-count
    summary: The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes.
  - name: --parameters
    summary: A JSON encoded list of application parameter overrides to be applied when creating the application.
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_application_delete
  name: az sf application delete
  summary: Deletes an existing Service Fabric application.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --application-id
    summary: The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme.
  - name: --force-remove
    summary: Remove a Service Fabric application or service forcefully without going through the graceful shutdown sequence. This parameter can be used to forcefully delete an application or service for which delete is timing out due to issues in the service code that prevents graceful close of replicas.
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_application_health
  name: az sf application health
  summary: Gets the health of the service fabric application.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --application-id
    summary: The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme.
  - name: --deployed-applications-health-state-filter
    summary: Allows filtering of the deployed applications health state objects returned in the result of application health query based on their health state. The possible values for this parameter include integer value of one of the following health states. Only deployed applications that match the filter will be returned.All deployed applications are used to evaluate the aggregated health state. If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, if the provided value is 6 then health state of deployed applications with HealthState value of OK (2) and Warning (4) are returned. - Default - Default value. Matches any HealthState. The value is zero. - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1. - Ok - Filter that matches input with HealthState value Ok. The value is 2. - Warning - Filter that matches input with HealthState value Warning. The value is 4. - Error - Filter that matches input with HealthState value Error. The value is 8. - All - Filter that matches input with any HealthState value. The value is 65535.
  - name: --events-health-state-filter
    summary: Allows filtering the collection of HealthEvent objects returned based on health state. The possible values for this parameter include integer value of one of the following health states. Only events that match the filter are returned. All events are used to evaluate the aggregated health state. If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned. - Default - Default value. Matches any HealthState. The value is zero. - None - Filter that doesn’t match any HealthState value. Used in order to return no results on a given collection of states. The value is 1. - Ok - Filter that matches input with HealthState value Ok. The value is 2. - Warning - Filter that matches input with HealthState value Warning. The value is 4. - Error - Filter that matches input with HealthState value Error. The value is 8. - All - Filter that matches input with any HealthState value. The value is 65535.
  - name: --services-health-state-filter
    summary: Allows filtering of the services health state objects returned in the result of services health query based on their health state. The possible values for this parameter include integer value of one of the following health states. Only services that match the filter are returned. All services are used to evaluate the aggregated health state. If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, if the provided value is 6 then health state of services with HealthState value of OK (2) and Warning (4) will be returned. - Default - Default value. Matches any HealthState. The value is zero. - None - Filter that doesn�t match any HealthState value. Used in order to return no results on a given collection of states. The value is 1. - Ok - Filter that matches input with HealthState value Ok. The value is 2. - Warning - Filter that matches input with HealthState value Warning. The value is 4. - Error - Filter that matches input with HealthState value Error. The value is 8. - All - Filter that matches input with any HealthState value. The value is 65535.
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_application_list
  name: az sf application list
  summary: Gets the list of applications created in the Service Fabric cluster that match filters specified as the parameter.
  langs:
  - azurecli
  parameters:
  - name: --application-type-name
    summary: The application type name used to filter the applications to query for. This value should not contain the application type version.
  - name: --continuation-token
    summary: The continuation token parameter is used to obtain next set of results. A continuation token with a non empty value is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results then the continuation token does not contain a value. The value of this parameter should not be URL encoded.
  - name: --exclude-application-parameters
    summary: The flag that specifies whether application parameters will be excluded from the result.
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_application_manifest
  name: az sf application manifest
  summary: Gets the manifest describing an application type.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --application-type-name
    summary: The name of the application type.
  - isRequired: true
    name: --application-type-version
    summary: The version of the application type.
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_application_package_delete
  name: az sf application package-delete
  summary: Deletes existing image store content.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --content-path
    summary: Relative path to file or folder in the image store from its root.
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_application_provision
  name: az sf application provision
  summary: Provisions or registers a Service Fabric application type with the cluster.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --application-type-build-path
    summary: The relative image store path to the application package.
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_application_report_health
  name: az sf application report-health
  summary: Sends a health report on the Service Fabric application.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --application-id
    summary: The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme.
  - isRequired: true
    name: --health-property
    summary: The property of the health information. An entity can have health reports for different properties. The property is a string and not a fixed enumeration to allow the reporter flexibility to categorize the state condition that triggers the report. For example, a reporter with SourceId "LocalWatchdog" can monitor the state of the available disk on a node, so it can report "AvailableDisk" property on that node. The same reporter can monitor the node connectivity, so it can report a property "Connectivity" on the same node. In the health store, these reports are treated as separate health events for the specified node. Together with the SourceId, the property uniquely identifies the health information.
  - isRequired: true
    name: --health-state
    summary: "Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'."
  - isRequired: true
    name: --source-id
    summary: The source name which identifies the client/watchdog/system component which generated the health information.
  - name: --description
    summary: The description of the health information. It represents free text used to add human readable information about the report. The maximum string length for the description is 4096 characters. If the provided string is longer, it will be automatically truncated. When truncated, the last characters of the description contain a marker "[Truncated]", and total string size is 4096 characters. The presence of the marker indicates to users that truncation occurred. Note that when truncated, the description has less than 4096 characters from the original string.
  - name: --remove-when-expired
    summary: Value that indicates whether the report is removed from health store when it expires. If set to true, the report is removed from the health store after it expires. If set to false, the report is treated as an error when expired. The value of this property is false by default. When clients report periodically, they should set this value to false (default). This way, is the reporter has issues (eg. deadlock) and can't report, the entity is evaluated at error when the health report expires. This flags the entity as being in Error health state.
  - name: --sequence-number
    summary: The sequence number for this health report as a numeric string. The report sequence number is used by the health store to detect stale reports. If not specified, a sequence number is auto-generated by the health client when a report is added.
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
  - name: --ttl
    summary: The duration, in milliseconds, for which this health report is valid. When clients report periodically, they should send reports with higher frequency than time to live. If not specified, time to live defaults to infinite value.
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_application_type
  name: az sf application type
  summary: Gets the list of application types in the Service Fabric cluster.
  langs:
  - azurecli
  parameters:
  - name: --continuation-token
    summary: The continuation token parameter is used to obtain next set of results. A continuation token with a non empty value is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results then the continuation token does not contain a value. The value of this parameter should not be URL encoded.
  - name: --exclude-application-parameters
    summary: The flag that specifies whether application parameters will be excluded from the result.
  - name: --max-results
    summary: The maximum number of results to be returned as part of the paged queries. This parameter defines the upper bound on the number of results returned. The results returned can be less than the specified maximum results if they do not fit in the message as per the max message size restrictions defined in the configuration. If this parameter is zero or not specified, the paged queries includes as much results as possible that fit in the return message.
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_application_unprovision
  name: az sf application unprovision
  summary: Removes or unregisters a Service Fabric application type from the cluster.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --application-type-name
    summary: The name of the application type.
  - isRequired: true
    name: --application-type-version
    summary: The application type version.
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_application_upgrade
  name: az sf application upgrade
  summary: Starts upgrading an application in the Service Fabric cluster.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --app-id
    summary: The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme.
  - isRequired: true
    name: --app-version
    summary: The target application type version (found in the application manifest) for the application upgrade.
  - isRequired: true
    name: --parameters
    summary: A JSON encoded list of application parameter overrides to be applied when upgrading the application.
  - name: --default-service-health-policy
    summary: JSON encoded specification of the health policy used by default to evaluate the health of a service type.
  - name: --failure-action
    summary: The action to perform when a Monitored upgrade encounters monitoring policy or health policy violations.
  - name: --force-restart
    summary: Forcefully restart processes during upgrade even when the code version has not changed.
  - name: --health-check-retry-timeout
    defaultValue: PT0H10M0S
    summary: The amount of time to retry health evaluations when the application or cluster is unhealthy before the failure action is executed. Measured in milliseconds.
  - name: --health-check-stable-duration
    defaultValue: PT0H2M0S
    summary: The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. Measured in milliseconds.
  - name: --health-check-wait-duration
    defaultValue: "0"
    summary: The amount of time to wait after completing an upgrade domain before applying health policies. Measured in milliseconds.
  - name: --max-unhealthy-apps
    summary: The maximum allowed percentage of unhealthy deployed applications. Represented as a number between 0 and 100.
  - name: --mode
    defaultValue: UnmonitoredAuto
    summary: The mode used to monitor health during a rolling upgrade.
  - name: --replica-set-check-timeout
    defaultValue: "42949672925"
    summary: The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. Measured in seconds.
  - name: --service-health-policy
    summary: JSON encoded map with service type health policy per service type name. The map is empty be default.
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
  - name: --upgrade-domain-timeout
    defaultValue: P10675199DT02H48M05.4775807S
    summary: The amount of time each upgrade domain has to complete before FailureAction is executed. Measured in milliseconds.
  - name: --upgrade-timeout
    defaultValue: P10675199DT02H48M05.4775807S
    summary: The amount of time the overall upgrade has to complete before FailureAction is executed. Measured in milliseconds.
  - name: --warning-as-error
    summary: Treat health evaluation warnings with the same severity as errors.
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_application_upload
  name: az sf application upload
  summary: Copies a Service Fabric application package to the image store.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --path
    summary: The path to your local application package.
  - name: --show-progress
    summary: Show file upload progress.
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
commands:
- uid: az_sf_application_create
  name: az sf application create
  summary: Creates a Service Fabric application using the specified description.
- uid: az_sf_application_delete
  name: az sf application delete
  summary: Deletes an existing Service Fabric application.
- uid: az_sf_application_health
  name: az sf application health
  summary: Gets the health of the service fabric application.
- uid: az_sf_application_list
  name: az sf application list
  summary: Gets the list of applications created in the Service Fabric cluster that match filters specified as the parameter.
- uid: az_sf_application_manifest
  name: az sf application manifest
  summary: Gets the manifest describing an application type.
- uid: az_sf_application_package_delete
  name: az sf application package-delete
  summary: Deletes existing image store content.
- uid: az_sf_application_provision
  name: az sf application provision
  summary: Provisions or registers a Service Fabric application type with the cluster.
- uid: az_sf_application_report_health
  name: az sf application report-health
  summary: Sends a health report on the Service Fabric application.
- uid: az_sf_application_type
  name: az sf application type
  summary: Gets the list of application types in the Service Fabric cluster.
- uid: az_sf_application_unprovision
  name: az sf application unprovision
  summary: Removes or unregisters a Service Fabric application type from the cluster.
- uid: az_sf_application_upgrade
  name: az sf application upgrade
  summary: Starts upgrading an application in the Service Fabric cluster.
- uid: az_sf_application_upload
  name: az sf application upload
  summary: Copies a Service Fabric application package to the image store.
globalParameters:
- name: --debug
  summary: Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: Show this help message and exit.
- name: --output -o
  defaultValue: json
  parameterValueGroup: json, jsonc, table, tsv
  summary: Output format.
- name: --query
  summary: JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --verbose
  summary: Increase logging verbosity. Use --debug for full debug logs.
