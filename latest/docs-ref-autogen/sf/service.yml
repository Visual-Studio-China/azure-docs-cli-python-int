### YamlMime:UniversalReference
items:
- uid: az_sf_service
  name: az sf service
  summary: Manage services of an Azure Service Fabric application.
  description: ''
  langs:
  - azurecli
  children:
  - az_sf_service_application_name
  - az_sf_service_create
  - az_sf_service_description
  - az_sf_service_health
  - az_sf_service_list
  - az_sf_service_manifest
  - az_sf_service_report_health
  - az_sf_service_resolve
  - az_sf_service_update
- uid: az_sf_service_application_name
  name: az sf service application-name
  summary: Gets the name of the Service Fabric application for a service.
  description: The GetApplicationName endpoint returns the name of the application for the specified service.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --service-id
    summary: The identity of the service. This is typically the full name of the service without the 'fabric:' URI scheme.
    description: ''
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
    description: ''
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_service_create
  name: az sf service create
  summary: Creates the specified Service Fabric service from the description.
  description: ''
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --app-id
    summary: The identity of the parent application. This is typically the full id of the application without the 'fabric:' URI scheme.
    description: ''
  - isRequired: true
    name: --name
    summary: Name of the service. This should be a child of the application id. This is the full name including the `fabric:` URI. For example service `fabric:/A/B` is a child of application `fabric:/A`.
    description: ''
  - isRequired: true
    name: --service-type
    summary: Name of the service type.
    description: ''
  - name: --activation-mode
    summary: The activation mode for the service package.
    description: ''
  - name: --constraints
    summary: The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following:"NodeColor == blue".
    description: ''
  - name: --correlated-service
    summary: Name of the target service to correlate with.
    description: ''
  - name: --correlation
    summary: Correlate the service with an existing service using an alignment affinity.
    description: ''
  - name: --dns-name
    summary: The DNS name of the service to be created. The Service Fabric DNS system service must be enabled for this setting.
    description: ''
  - name: --instance-count
    summary: The instance count. This applies to stateless services only.
    description: ''
  - name: --int-scheme
    summary: Indicates the service should be uniformly partitioned across a range of unsigned integers.
    description: ''
  - name: --int-scheme-count
    summary: The number of partitions inside the integer key range to create, if using an uniform integer partition scheme.
    description: ''
  - name: --int-scheme-high
    summary: The end of the key integer range, if using an uniform integer partition scheme.
    description: ''
  - name: --int-scheme-low
    summary: The start of the key integer range, if using an uniform integer partition scheme.
    description: ''
  - name: --load-metrics
    summary: JSON encoded list of metrics used when load balancing services across nodes.
    description: ''
  - name: --min-replica-set-size
    summary: The minimum replica set size as a number. This applies to stateful services only.
    description: ''
  - name: --move-cost
    summary: "Specifies the move cost for the service. Possible values are: 'Zero', 'Low', 'Medium', 'High'."
    description: ''
  - name: --named-scheme
    summary: Indicates the service should have multiple named partitions.
    description: ''
  - name: --named-scheme-list
    summary: JSON encoded list of names to partition the service across, if using the named partition scheme.
    description: ''
  - name: --no-persisted-state
    summary: If true, this indicates the service has no persistent state stored on the local disk, or it only stores state in memory.
    description: ''
  - name: --placement-policy-list
    summary: 'JSON encoded list of placement policies for the service, and any associated domain names. Policies can be one or more of: `NonPartiallyPlaceService`, `PreferPrimaryDomain`, `RequireDomain`, `RequireDomainDistribution`.'
    description: ''
  - name: --quorum-loss-wait
    summary: The maximum duration, in seconds, for which a partition is allowed to be in a state of quorum loss. This applies to stateful services only.
    description: ''
  - name: --replica-restart-wait
    summary: The duration, in seconds, between when a replica goes down and when a new replica is created. This applies to stateful services only.
    description: ''
  - name: --singleton-scheme
    summary: Indicates the service should have a single partition or be a non-partitioned service.
    description: ''
  - name: --stand-by-replica-keep
    summary: The maximum duration, in seconds,  for which StandBy replicas will be maintained before being removed. This applies to stateful services only.
    description: ''
  - name: --stateful
    summary: Indicates the service is a stateful service.
    description: ''
  - name: --stateless
    summary: Indicates the service is a stateless service.
    description: ''
  - name: --target-replica-set-size
    summary: The target replica set size as a number. This applies to stateful services only.
    description: ''
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
    description: ''
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_service_description
  name: az sf service description
  summary: Gets the description of an existing Service Fabric service.
  description: Gets the description of an existing Service Fabric service. A service must be created before its description can be obtained.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --service-id
    summary: The identity of the service. This is typically the full name of the service without the 'fabric:' URI scheme.
    description: ''
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
    description: ''
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_service_health
  name: az sf service health
  summary: Gets the health of the specified Service Fabric service.
  description: Gets the health information of the specified service. Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state. Use PartitionsHealthStateFilter to filter the collection of partitions returned. If you specify a service that does not exist in the health store, this cmdlet returns an error. .
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --service-id
    summary: The identity of the service. This is typically the full name of the service without the 'fabric:' URI scheme.
    description: ''
  - name: --events-health-state-filter
    summary: Allows filtering the collection of HealthEvent objects returned based on health state. The possible values for this parameter include integer value of one of the following health states. Only events that match the filter are returned. All events are used to evaluate the aggregated health state. If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, If the provided value is 6 then all of the events with HealthState value of OK (2) and Warning (4) are returned. - Default - Default value. Matches any HealthState. The value is zero. - None - Filter that doesnâ€™t match any HealthState value. Used in order to return no results on a given collection of states. The value is 1. - Ok - Filter that matches input with HealthState value Ok. The value is 2. - Warning - Filter that matches input with HealthState value Warning. The value is 4. - Error - Filter that matches input with HealthState value Error. The value is 8. - All - Filter that matches input with any HealthState value. The value is 65535.
    description: ''
  - name: --partitions-health-state-filter
    summary: Allows filtering of the partitions health state objects returned in the result of service health query based on their health state. The possible values for this parameter include integer value of one of the following health states. Only partitions that match the filter are returned. All partitions are used to evaluate the aggregated health state. If not specified, all entries are returned. The state values are flag based enumeration, so the value could be a combination of these value obtained using bitwise 'OR' operator. For example, if the provided value is 6 then health state of partitions with HealthState value of OK (2) and Warning (4) will be returned. - Default - Default value. Matches any HealthState. The value is zero. - None - Filter that doesn't match any HealthState value. Used in order to return no results on a given collection of states. The value is 1. - Ok - Filter that matches input with HealthState value Ok. The value is 2. - Warning - Filter that matches input with HealthState value Warning. The value is 4. - Error - Filter that matches input with HealthState value Error. The value is 8. - All - Filter that matches input with any HealthState value. The value is 65535.
    description: ''
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
    description: ''
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_service_list
  name: az sf service list
  summary: Gets the information about all services belonging to the application specified by the application id.
  description: Returns the information about all services belonging to the application specified by the application id.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --application-id
    summary: The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme.
    description: ''
  - name: --continuation-token
    summary: The continuation token parameter is used to obtain next set of results. A continuation token with a non empty value is included in the response of the API when the results from the system do not fit in a single response. When this value is passed to the next API call, the API returns next set of results. If there are no further results then the continuation token does not contain a value. The value of this parameter should not be URL encoded.
    description: ''
  - name: --service-type-name
    summary: The service type name used to filter the services to query for.
    description: ''
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
    description: ''
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_service_manifest
  name: az sf service manifest
  summary: Gets the manifest describing a service type.
  description: Gets the manifest describing a service type. The response contains the service manifest XML as a string.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --application-type-name
    summary: The name of the application type.
    description: ''
  - isRequired: true
    name: --application-type-version
    summary: The version of the application type.
    description: ''
  - isRequired: true
    name: --service-manifest-name
    summary: The name of a service manifest registered as part of an application type in a Service Fabric cluster.
    description: ''
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
    description: ''
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_service_report_health
  name: az sf service report-health
  summary: Sends a health report on the Service Fabric service.
  description: Reports health state of the specified Service Fabric service. The report must contain the information about the source of the health report and property on which it is reported. The report is sent to a Service Fabric gateway Service, which forwards to the health store. The report may be accepted by the gateway, but rejected by the health store after extra validation. For example, the health store may reject the report because of an invalid parameter, like a stale sequence number. To see whether the report was applied in the health store, check that the report appears in the health events of the service.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --health-property
    summary: The property of the health information. An entity can have health reports for different properties. The property is a string and not a fixed enumeration to allow the reporter flexibility to categorize the state condition that triggers the report. For example, a reporter with SourceId "LocalWatchdog" can monitor the state of the available disk on a node, so it can report "AvailableDisk" property on that node. The same reporter can monitor the node connectivity, so it can report a property "Connectivity" on the same node. In the health store, these reports are treated as separate health events for the specified node. Together with the SourceId, the property uniquely identifies the health information.
    description: ''
  - isRequired: true
    name: --health-state
    summary: "Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'."
    description: ''
  - isRequired: true
    name: --service-id
    summary: The identity of the service. This is typically the full name of the service without the 'fabric:' URI scheme.
    description: ''
  - isRequired: true
    name: --source-id
    summary: The source name which identifies the client/watchdog/system component which generated the health information.
    description: ''
  - name: --description
    summary: The description of the health information. It represents free text used to add human readable information about the report. The maximum string length for the description is 4096 characters. If the provided string is longer, it will be automatically truncated. When truncated, the last characters of the description contain a marker "[Truncated]", and total string size is 4096 characters. The presence of the marker indicates to users that truncation occurred. Note that when truncated, the description has less than 4096 characters from the original string.
    description: ''
  - name: --remove-when-expired
    summary: Value that indicates whether the report is removed from health store when it expires. If set to true, the report is removed from the health store after it expires. If set to false, the report is treated as an error when expired. The value of this property is false by default. When clients report periodically, they should set this value to false (default). This way, is the reporter has issues (eg. deadlock) and can't report, the entity is evaluated at error when the health report expires. This flags the entity as being in Error health state.
    description: ''
  - name: --sequence-number
    summary: The sequence number for this health report as a numeric string. The report sequence number is used by the health store to detect stale reports. If not specified, a sequence number is auto-generated by the health client when a report is added.
    description: ''
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
    description: ''
  - name: --ttl
    summary: The duration, in milliseconds, for which this health report is valid. When clients report periodically, they should send reports with higher frequency than time to live. If not specified, time to live defaults to infinite value.
    description: ''
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_service_resolve
  name: az sf service resolve
  summary: Resolve a Service Fabric partition.
  description: Resolve a Service Fabric service partition, to get the endpoints of the service replicas.
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --service-id
    summary: The identity of the service. This is typically the full name of the service without the 'fabric:' URI scheme.
    description: ''
  - name: --partition-key-type
    summary: Key type for the partition. This parameter is required if the partition scheme for the service is Int64Range or Named. The possible values are following. - None (1) - Indicates that the the PartitionKeyValue parameter is not specified. This is valid for the partitions with partitioning scheme as Singleton. This is the default value. The value is 1. - Int64Range (2) - Indicates that the the PartitionKeyValue parameter is an int64 partition key. This is valid for the partitions with partitioning scheme as Int64Range. The value is 2. - Named (3) - Indicates that the the PartitionKeyValue parameter is a name of the partition. This is valid for the partitions with partitioning scheme as Named. The value is 3.
    description: ''
  - name: --partition-key-value
    summary: Partition key. This is required if the partition scheme for the service is Int64Range or Named.
    description: ''
  - name: --previous-rsp-version
    summary: The value in the Version field of the response that was received previously. This is required if the user knows that the result that was got previously is stale.
    description: ''
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
    description: ''
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
- uid: az_sf_service_update
  name: az sf service update
  summary: Updates the specified service using the given update description.
  description: ''
  langs:
  - azurecli
  parameters:
  - isRequired: true
    name: --service-id
    summary: Target service to update. This is typically the full id of the service without the 'fabric:' URI scheme.
    description: ''
  - name: --constraints
    summary: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue".'
    description: ''
  - name: --correlated-service
    summary: Name of the target service to correlate with.
    description: ''
  - name: --correlation
    summary: Correlate the service with an existing service using an alignment affinity.
    description: ''
  - name: --instance-count
    summary: The instance count. This applies to stateless services only.
    description: ''
  - name: --load-metrics
    summary: JSON encoded list of metrics used when load balancing across nodes.
    description: ''
  - name: --min-replica-set-size
    summary: The minimum replica set size as a number. This applies to stateful services only.
    description: ''
  - name: --move-cost
    summary: "Specifies the move cost for the service. Possible values are: 'Zero', 'Low', 'Medium', 'High'."
    description: ''
  - name: --placement-policy-list
    summary: 'JSON encoded list of placement policies for the service, and any associated domain names. Policies can be one or more of: `NonPartiallyPlaceService`, `PreferPrimaryDomain`, `RequireDomain`, `RequireDomainDistribution`.'
    description: ''
  - name: --quorum-loss-wait
    summary: The maximum duration, in seconds, for which a partition is allowed to be in a state of quorum loss. This applies to stateful services only.
    description: ''
  - name: --replica-restart-wait
    summary: The duration, in seconds, between when a replica goes down and when a new replica is created. This applies to stateful services only.
    description: ''
  - name: --stand-by-replica-keep
    summary: The maximum duration, in seconds,  for which StandBy replicas will be maintained before being removed. This applies to stateful services only.
    description: ''
  - name: --stateful
    summary: Indicates the target service is a stateful service.
    description: ''
  - name: --stateless
    summary: Indicates the target service is a stateless service.
    description: ''
  - name: --target-replica-set-size
    summary: The target replica set size as a number. This applies to stateful services only.
    description: ''
  - name: --timeout -t
    defaultValue: "60"
    summary: The server timeout for performing the operation, specified in seconds. This is the maximum time a client can wait.
    description: ''
  source:
    path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
    remote:
      branch: master
      path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
      repo: https://github.com/Azure/azure-cli.git
commands:
- uid: az_sf_service_application_name
  name: az sf service application-name
  summary: Gets the name of the Service Fabric application for a service.
- uid: az_sf_service_create
  name: az sf service create
  summary: Creates the specified Service Fabric service from the description.
- uid: az_sf_service_description
  name: az sf service description
  summary: Gets the description of an existing Service Fabric service.
- uid: az_sf_service_health
  name: az sf service health
  summary: Gets the health of the specified Service Fabric service.
- uid: az_sf_service_list
  name: az sf service list
  summary: Gets the information about all services belonging to the application specified by the application id.
- uid: az_sf_service_manifest
  name: az sf service manifest
  summary: Gets the manifest describing a service type.
- uid: az_sf_service_report_health
  name: az sf service report-health
  summary: Sends a health report on the Service Fabric service.
- uid: az_sf_service_resolve
  name: az sf service resolve
  summary: Resolve a Service Fabric partition.
- uid: az_sf_service_update
  name: az sf service update
  summary: Updates the specified service using the given update description.
globalParameters:
- name: --debug
  summary: Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: Show this help message and exit.
- name: --output -o
  defaultValue: json
  parameterValueGroup: json, jsonc, table, tsv
  summary: Output format.
- name: --query
  summary: JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --verbose
  summary: Increase logging verbosity. Use --debug for full debug logs.
doc_source_url_repo: https://github.com/Azure/azure-cli/blob/master/
doc_source_url_path: src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
original_content_git_url: https://github.com/Azure/azure-cli/blob/master/src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
gitcommit: https://github.com/Azure/azure-cli/blob/c85bdbe4002a5e52a2402bf5add66bdaf84d000d/src/command_modules/azure-cli-sf/azure/cli/command_modules/sf/_help.py
updated_at: 9/14/2017 9:54:13 PM
ms.date: 9/14/2017
